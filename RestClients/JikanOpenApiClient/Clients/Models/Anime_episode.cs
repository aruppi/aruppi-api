// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace JikanRest.Models {
    /// <summary>
    /// Anime Episode Resource
    /// </summary>
    public class Anime_episode : IAdditionalDataHolder, IParsable {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Aired Date ISO8601</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Aired { get; set; }
#nullable restore
#else
        public string Aired { get; set; }
#endif
        /// <summary>Episode duration in seconds</summary>
        public int? Duration { get; set; }
        /// <summary>Filler episode</summary>
        public bool? Filler { get; set; }
        /// <summary>MyAnimeList ID</summary>
        public int? MalId { get; set; }
        /// <summary>Recap episode</summary>
        public bool? Recap { get; set; }
        /// <summary>Episode Synopsis</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Synopsis { get; set; }
#nullable restore
#else
        public string Synopsis { get; set; }
#endif
        /// <summary>Title</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Title { get; set; }
#nullable restore
#else
        public string Title { get; set; }
#endif
        /// <summary>Title Japanese</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TitleJapanese { get; set; }
#nullable restore
#else
        public string TitleJapanese { get; set; }
#endif
        /// <summary>title_romanji</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TitleRomanji { get; set; }
#nullable restore
#else
        public string TitleRomanji { get; set; }
#endif
        /// <summary>MyAnimeList URL</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Url { get; set; }
#nullable restore
#else
        public string Url { get; set; }
#endif
        /// <summary>
        /// Instantiates a new anime_episode and sets the default values.
        /// </summary>
        public Anime_episode() {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static Anime_episode CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new Anime_episode();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"aired", n => { Aired = n.GetStringValue(); } },
                {"duration", n => { Duration = n.GetIntValue(); } },
                {"filler", n => { Filler = n.GetBoolValue(); } },
                {"mal_id", n => { MalId = n.GetIntValue(); } },
                {"recap", n => { Recap = n.GetBoolValue(); } },
                {"synopsis", n => { Synopsis = n.GetStringValue(); } },
                {"title", n => { Title = n.GetStringValue(); } },
                {"title_japanese", n => { TitleJapanese = n.GetStringValue(); } },
                {"title_romanji", n => { TitleRomanji = n.GetStringValue(); } },
                {"url", n => { Url = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("aired", Aired);
            writer.WriteIntValue("duration", Duration);
            writer.WriteBoolValue("filler", Filler);
            writer.WriteIntValue("mal_id", MalId);
            writer.WriteBoolValue("recap", Recap);
            writer.WriteStringValue("synopsis", Synopsis);
            writer.WriteStringValue("title", Title);
            writer.WriteStringValue("title_japanese", TitleJapanese);
            writer.WriteStringValue("title_romanji", TitleRomanji);
            writer.WriteStringValue("url", Url);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
